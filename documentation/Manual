------------
  GRAMMAR
------------

This theorem prover uses standard Modal Logic syntax. It is recursively defined as the following:

 prop = {a : a is a string} \ {b: b is a string such that any of its substrings are "~", "[]", "<>", "&", "|", "->", "<->", ";", ":", ",", ")" or "("}
 fmla = prop | ¬fmla | (fmla ∧ fmla) | (fmla ∨ fmla) | (fmla → fmla) | (fmla ↔ fmla) | □fmla | ◊fmla

Please, make sure you are making use of parentheses correctly, as specified above.


------------
   SYNTAX
------------

The syntax you must use when writing your formulas is the following (format: "what you want to write" = "how you should write it"):

 ¬A = ~A
 □A = []A
 ◊A = <>A
 (A ∧ B) = (A & B)
 (A ∨ B) = (A | B)
 (A → B) = (A -> B)
 (A ↔ B) = (A <-> B)

You must also note that formulas in a theorem are separated by commas (",") and different theorems to prove are separated by semicolons (";").
The last formula in a given theorem will be considered as the formula intended to be proven, and all previous formulas of the theorem will be considered as axioms.
Also, the use of spaces, new tabs, new lines, etc. is irrelevant (but surely helpful for the reader).


------------
   FRAME
 CONDITIONS
------------

At the beginning of the input file, before any theorem has been defined, you may include a Modal System specified by a set of frame conditions which will be applied to the theorems in such input file. If not such system is specified, only the frame condition K will be applied.
The frame conditions currently supported by this Theorem Prover are the following:

K = Kripke (no special conditions)
T = reflexive
B = symmetric

In order to specify your frame conditions, you may include the following construct (a string of your frame conditions surrounded by colons):

:frame_conditions:

Where frame_conditions is a string whose only characters are 'K', 'D', 'T', 'B', '4' and '5', in any order but without repetition of any of them.


--------
  USE
--------

Create a file called "input.txt" and locate it within the folder "input". In it, write your theorems as specified above. Next, run the Java program. Finally, find your results in the file "output.txt" in the folder named "output".
If a formula is deemed as "not recognized", you should check that particular formula as it is not following the syntax and/or grammar specified above. If you are confident your formula is correct, please report any bugs.